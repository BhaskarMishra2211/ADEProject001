{
	"name": "pl_orchestration_pipeline",
	"properties": {
		"description": "first time full load, second time incremental data only ",
		"activities": [
			{
				"name": "Copy data1",
				"type": "Copy",
				"dependsOn": [
					{
						"activity": "last_load",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "current_load",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": {
							"value": "select * from dbo.source_cars_data where Date_ID > '@{activity('last_load').output.value[0].last_load}' and Date_ID <= '@{activity('current_load').output.value[0].max_date}'",
							"type": "Expression"
						},
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"sink": {
						"type": "ParquetSink",
						"storeSettings": {
							"type": "AzureBlobFSWriteSettings"
						},
						"formatSettings": {
							"type": "ParquetWriteSettings"
						}
					},
					"enableStaging": false,
					"translator": {
						"type": "TabularTranslator",
						"typeConversion": true,
						"typeConversionSettings": {
							"allowDataTruncation": true,
							"treatBooleanAsNumber": false
						}
					}
				},
				"inputs": [
					{
						"referenceName": "ds_sqldatabasesink",
						"type": "DatasetReference"
					}
				],
				"outputs": [
					{
						"referenceName": "ds_adls_sink",
						"type": "DatasetReference"
					}
				]
			},
			{
				"name": "last_load",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select * from dbo.water_table",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqldatabasesink",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "current_load",
				"type": "Lookup",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"source": {
						"type": "AzureSqlSource",
						"sqlReaderQuery": "select max(Date_ID) as max_date from dbo.source_cars_data",
						"queryTimeout": "02:00:00",
						"partitionOption": "None"
					},
					"dataset": {
						"referenceName": "ds_sqldatabasesink",
						"type": "DatasetReference"
					},
					"firstRowOnly": false
				}
			},
			{
				"name": "Stored procedure",
				"type": "SqlServerStoredProcedure",
				"dependsOn": [
					{
						"activity": "Copy data1",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"storedProcedureName": "[dbo].[UpdateWatermarkTable]",
					"storedProcedureParameters": {
						"lastload": {
							"value": {
								"value": "@activity('current_load').output.value[0].max_date",
								"type": "Expression"
							},
							"type": "String"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "ls_sql_sink",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "ForEach",
				"type": "ForEach",
				"dependsOn": [
					{
						"activity": "Stored procedure",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"items": {
						"value": "@pipeline().parameters.TransformationNotebooks",
						"type": "Expression"
					},
					"isSequential": true,
					"activities": [
						{
							"name": "TransformationsNotebooks",
							"type": "DatabricksNotebook",
							"dependsOn": [],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": {
									"value": "@item()",
									"type": "Expression"
								},
								"baseParameters": {
									"incremental_flag": {
										"value": "@{if(equals(item(), '/Users/bhaskarmay23_gmail.com#ext#@bhaskarmay23gmail005.onmicrosoft.com/ADEProject001/DatabricksNotebooks/silverToGold-DimensionsTransformations'), 0 , null)}",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "ls_databricks",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			}
		],
		"parameters": {
			"TransformationNotebooks": {
				"type": "array",
				"defaultValue": [
					"/Users/bhaskarmay23_gmail.com#ext#@bhaskarmay23gmail005.onmicrosoft.com/ADEProject001/DatabricksNotebooks/bronzeToSilverTransformations",
					"/Users/bhaskarmay23_gmail.com#ext#@bhaskarmay23gmail005.onmicrosoft.com/ADEProject001/DatabricksNotebooks/silverToGold-DimensionsTransformations",
					"/Users/bhaskarmay23_gmail.com#ext#@bhaskarmay23gmail005.onmicrosoft.com/ADEProject001/DatabricksNotebooks/silverToGold-FactsTransformations"
				]
			}
		},
		"folder": {
			"name": "orchestration"
		},
		"annotations": [],
		"lastPublishTime": "2025-07-13T05:51:59Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}